{"version":3,"sources":["components/Header/Header.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPost.module.css","components/Login/Login.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Common/Paginator/Paginator.module.css","components/Nav/Nav.module.css","reportWebVitals.js","api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Nav/Nav.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPost.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Common/Fetch/oval.svg","components/Common/Fetch/Fetch.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/hoc/withAutoRedirect.js","components/Profile/ProfileContainer.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/User.jsx","components/Common/Paginator/Paginator.jsx","components/Users/Users.jsx","redux/users-selector.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","console","warn","profileAPI","getProfile","getStatus","setStatus","updateStatus","status","put","authAPI","email","password","rememberMe","ADD_POST","SET_USER_PROFILE","SET_STATUS","UPDATE_STATUS","initialState","posts","id","name","newPostText","profileReducer","state","action","type","newPost","text","profile","dispatch","log","MESSAGE_SEND","dialogs","messages","dialogsReducer","newMessage","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","users","totalCount","isFetching","followingInProcess","usersReducer","map","u","followed","newCurrentPage","filter","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleIsFollowingProcess","SET_USER_DATA","isAuth","authReducer","setUserData","getAuthUserData","resultCode","logout","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","app","store","createStore","applyMiddleware","thunkMiddleware","Nav","className","s","nav","to","a","activeClassName","activeLink","a_title","Post","props","item","style","backgroundImage","backgroundPosition","autor","comment","AddPostForm","formik","useFormik","initialValues","newPostBody","onSubmit","values","addPost","form","handleSubmit","value","onChange","handleChange","textarea","placeholder","button","MyPost","PostsElements","content","title","MyPostContainer","connect","addPostCreator","Fetch","width","height","display","margin","src","fetch","alt","useState","editMode","setEditMode","useEffect","onBlur","e","currentTarget","autoFocus","onClick","ProfileInfo","p","main","content_img","backgroundSize","gridRow","gridColumn","header","photos","small","fullName","followers","info","about","Profile","mapStateToPropsForRedirect","withAutoRedirect","Component","RedirectComponent","this","React","ProfileContainer","match","params","compose","withRouter","dialogsElements","photo","MessageItem","dialogs_item","AddMesageForm","newMessageBody","messageSend","send_message","Dialogs","d","DialogsItem","messagesElements","m","messageSendCreator","User","user","follow","unfollow","item_right","disabled","some","Paginator","onPageChanged","pagesCount","Math","ceil","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pages","i","push","selectedPage","page","Users","getTotalCount","getCurrentPage","getUsers","getPageSize","getIsFetching","UsersContainer","followSuccess","unfollowSuccess","items","getUsersS","Header","logo","icon","region","login","logOut","HeaderContainer","LoginForm","container","field","errors","Login","App","initializeApp","path","render","DialogsContainer","promise","Promise","all","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdb8756c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__XlsL2\",\"logo\":\"Header_logo__3KJX_\",\"region\":\"Header_region__1xgtw\",\"icon\":\"Header_icon__1xavi\",\"login\":\"Header_login__13tCi\",\"main\":\"Header_main__3X-RL\",\"logOut\":\"Header_logOut__2szZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__10zGs\",\"main\":\"Users_main__uHd8N\",\"content\":\"Users_content__45MrH\",\"users\":\"Users_users__lJ20s\",\"title\":\"Users_title__25cNx\",\"item\":\"Users_item__1ZS3k\",\"item_right\":\"Users_item_right__4Ny_g\",\"name\":\"Users_name__dbiFR\",\"followed\":\"Users_followed__3sczf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProfileInfo_main__SAb4T\",\"header\":\"ProfileInfo_header__1lITb\",\"content\":\"ProfileInfo_content__307eA\",\"about\":\"ProfileInfo_about__EJqM8\",\"about_title\":\"ProfileInfo_about_title__3xMQy\",\"name\":\"ProfileInfo_name__I2hNY\",\"info\":\"ProfileInfo_info__3mvHo\",\"item\":\"ProfileInfo_item__OdwwX\",\"item_title\":\"ProfileInfo_item_title__20eoT\",\"item_value\":\"ProfileInfo_item_value__K4VOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Dialogs_main__3R7Ka\",\"content\":\"Dialogs_content__1nnl1\",\"dialogs\":\"Dialogs_dialogs__3K9os\",\"messages\":\"Dialogs_messages__10Erg\",\"send_message\":\"Dialogs_send_message__3I9K9\",\"textarea\":\"Dialogs_textarea__3LB2v\",\"button\":\"Dialogs_button__3K-Yb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPost_content__IAHca\",\"title\":\"MyPost_title__2YqSs\",\"form\":\"MyPost_form__2K0wz\",\"button\":\"MyPost_button__raeao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__2ikek\",\"form\":\"Login_form__ergDS\",\"field\":\"Login_field__DqujJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_image\":\"Post_profile_image__2PJ4G\",\"item\":\"Post_item__A5mWq\",\"auto\":\"Post_auto__3NZ27\",\"text\":\"Post_text__29oBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogsItem_item__1BLGU\",\"photo\":\"DialogsItem_photo__1sYcJ\",\"name\":\"DialogsItem_name__312Rb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__2pa9z\",\"page\":\"Paginator_page__2oqrm\",\"selectedPage\":\"Paginator_selectedPage__ZO08F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__29iXS\",\"a\":\"Nav_a__2SSeN\",\"a_title\":\"Nav_a_title__3TuiD\",\"activeLink\":\"Nav_activeLink__heyhV\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'ae506d1a-c3bf-404f-8afd-e366c64d1f0b'\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use ProfileAPI object.');\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    setStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', {status:status})\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`, {\r\n            withCredentials: true\r\n        })\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return instance.post('auth/login', {email,password,rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}","import {profileAPI, usersAPI} from \"../api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst UPDATE_STATUS = 'UPDATE_STATUS';\r\nlet initialState={\r\n    posts: [\r\n        {id: 1, name: 'dmitry'},\r\n        {id: 2, name: 'vaider'},\r\n        {id: 3, name: 'alex'}\r\n    ],\r\n    newPostText: '',\r\n    status: 'loading'\r\n}\r\nconst profileReducer = (state=initialState, action) => {\r\n    switch (action.type){\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                name: 'test',\r\n                text: action.text,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts,newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE:{\r\n            return{\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n            case SET_STATUS:{\r\n            return{\r\n                ...state,\r\n                status: action.status,\r\n\r\n            }\r\n        }\r\n        case UPDATE_STATUS:{\r\n            return{\r\n                ...state,\r\n                status: action.status,\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default profileReducer;\r\nexport const addPostCreator = (text) => ({type: ADD_POST, text: text});\r\nexport const setUserProfile= (profile) => ({type: SET_USER_PROFILE, profile: profile})\r\nexport const setStatus= (status) => ({type: SET_STATUS, status: status})\r\n\r\nexport const getProfile = (userId) => {\r\n    return (dispatch)=> {\r\n        usersAPI.getProfile(userId)\r\n            .then(response => {\r\n                dispatch(setUserProfile(response.data));\r\n                }\r\n            );\r\n    }\r\n}\r\nexport const getStatus = (status) => {\r\n    return (dispatch)=> {\r\n        profileAPI.getStatus(status)\r\n            .then(response => {\r\n                    dispatch(setStatus(response.data));\r\n                    console.log(response.data)\r\n                }\r\n            );\r\n    }\r\n}\r\nexport const updateStatus = (status) => {\r\n    return (dispatch)=> {\r\n        profileAPI.updateStatus(status)\r\n            .then(response => {\r\n                if(response.data.resultCode===0)\r\n                    dispatch(setStatus(status));\r\n                }\r\n            );\r\n    }\r\n}","const MESSAGE_SEND = 'MESSAGE-SEND';\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'dmitry'},\r\n        {id: 2, name: 'vaider'},\r\n        {id: 3, name: 'alex'}\r\n    ],\r\n    messages: [\r\n        {id: 1, text: 'hi'},\r\n        {id: 2, text: 'how are you'},\r\n\r\n    ]\r\n}\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case MESSAGE_SEND: {\r\n            let newMessage = {\r\n                id: 4,\r\n                text: action.text\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport default dialogsReducer;\r\nexport const messageSendCreator = (text) => ({type: MESSAGE_SEND, text: text});","import {usersAPI} from \"../api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalCount: 14,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProcess: []\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return ({...u, followed: true});\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                        if (u.id === action.userId) {\r\n                            return ({...u, followed: false});\r\n                        }\r\n                        return u;\r\n                    }\r\n                )\r\n\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...action.users]\r\n\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.newCurrentPage,\r\n\r\n\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                //totalUsersCount: action.count\r\n                totalCount: action.totalCount\r\n\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state, followingInProcess: action.isFetching\r\n                    ? [...state.followingInProcess, action.userId]\r\n                    : state.followingInProcess.filter(id => id !== action.userId)\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport default usersReducer;\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId: userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId: userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users: users});\r\nexport const setCurrentPage = (newCurrentPage) => ({type: SET_CURRENT_PAGE, newCurrentPage: newCurrentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount: totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsFollowingProcess = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n    isFetching,\r\n    userId: userId\r\n});\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        usersAPI.getUsers(page, pageSize)\r\n            .then(data => {\r\n                    dispatch(setUsers(data.items));\r\n                    dispatch(setTotalUsersCount(data.totalCount));\r\n                    dispatch(setCurrentPage(page));\r\n                    dispatch(toggleIsFetching(false));\r\n                }\r\n            );\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowingProcess(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                    if (response.data.resultCode === 0)\r\n                        dispatch(followSuccess(userId));\r\n                    dispatch(toggleIsFollowingProcess(false, userId));\r\n                }\r\n            )\r\n    }\r\n\r\n}\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowingProcess(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                    if (response.data.resultCode === 0)\r\n                        dispatch(unfollowSuccess(userId));\r\n                    dispatch(toggleIsFollowingProcess(false, userId));\r\n                }\r\n            )\r\n    }\r\n\r\n}","import {authAPI} from \"../api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nlet initialState = {\r\n    isAuth: false\r\n\r\n\r\n\r\n}\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return{\r\n                ...state,\r\n                ...action.data, isAuth: action.isAuth\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport default authReducer;\r\nexport const setUserData = (data,isAuth) => ({type: SET_USER_DATA, data:data, isAuth:isAuth });\r\n\r\nexport  const getAuthUserData = () =>{\r\n    return (dispatch) =>{\r\n        authAPI.me()\r\n            .then(response => {\r\n\r\n                    if (response.data.resultCode === 0) {\r\n                        dispatch(setUserData(response.data.data, true));\r\n                    }\r\n                }\r\n            );\r\n    }\r\n}\r\nexport  const login = (email, password, rememberMe) =>{\r\n\r\n    return (dispatch) =>{\r\n        authAPI.login(email, password,rememberMe )\r\n            .then(response => {\r\n\r\n                    if (response.data.resultCode === 0) {\r\n                        dispatch(getAuthUserData())\r\n                    }\r\n\r\n                }\r\n            );\r\n    }\r\n}\r\nexport  const logout = () =>{\r\n    return (dispatch) =>{\r\n        authAPI.logout()\r\n            .then(response => {\r\n\r\n                    if (response.data.resultCode === 0) {\r\n                        dispatch(setUserData(null, false));\r\n                    }\r\n                }\r\n            );\r\n    }\r\n}","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const initializeSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () =>\r\n    (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n            dispatch(initializeSuccess())\r\n        })\r\n    }\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport appReducer from \"./app-reducer\";\r\nlet reducers = combineReducers({\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        usersPage: usersReducer,\r\n        authReducer:authReducer,\r\n        app:appReducer,\r\n\r\n    }\r\n);\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import s from './Nav.module.css';\r\nimport {CgProfile} from  'react-icons/cg';\r\nimport {BiMessageSquare} from  'react-icons/bi';\r\nimport {BsNewspaper} from  'react-icons/bs';\r\nimport {BsMusicNoteBeamed} from  'react-icons/bs';\r\nimport {FiSettings} from  'react-icons/fi';\r\nimport {FiUsers} from  'react-icons/fi';\r\nimport {NavLink} from 'react-router-dom';\r\nconst Nav = ()=>{\r\n    return(\r\n        <nav className={s.nav}>\r\n        <ul>\r\n          <li><NavLink to=\"/profile\" className={s.a} activeClassName={s.activeLink}><CgProfile/><span className={s.a_title}>Profile</span> </NavLink></li>\r\n          <li><NavLink to=\"/users\" className={s.a} activeClassName={s.activeLink}><FiUsers/><span className={s.a_title}>Users</span> </NavLink></li>\r\n          <li><NavLink to=\"/dialogs\" className={s.a} activeClassName={s.activeLink}><BiMessageSquare/><span className={s.a_title}>Message</span></NavLink></li>\r\n          <li><NavLink to=\"/news\"  className={s.a} activeClassName={s.activeLink}><BsNewspaper/><span className={s.a_title}>News</span></NavLink></li>\r\n          <li><NavLink to=\"/music\"  className={s.a} activeClassName={s.activeLink}><BsMusicNoteBeamed/><span className={s.a_title}>Music</span></NavLink></li>\r\n          <li><NavLink to=\"/settings\" className={s.a} activeClassName={s.activeLink}><FiSettings/><span className={s.a_title}>Settings</span></NavLink></li>\r\n        </ul>\r\n      </nav>\r\n      )\r\n\r\n};\r\n\r\nexport default  Nav;","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={'profile_image_small'}\r\n                 style={{\r\n                     backgroundImage: 'url(\"http://placehold.it/50x50\")',\r\n                     backgroundPosition: 'center'\r\n                 }}></div>\r\n            <div>\r\n                <div className={s.autor}>{props.name}</div>\r\n                <div className={s.text}>{props.comment}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Post;","import s from './MyPost.module.css';\r\nimport Post from './Post/Post';\r\nimport {BiRepost} from 'react-icons/bi';\r\nimport React from 'react';\r\nimport {useFormik} from \"formik\";\r\n\r\nconst MyPost = (props) => {\r\n    let PostsElements = props.profilePage.posts.map((post) => {\r\n        return <Post key={post.id} name={post.name} comment={post.text}/>\r\n    })\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.title}><BiRepost/> 21 posts</div>\r\n\r\n            <AddPostForm props={props}/>\r\n            {PostsElements}\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\nconst AddPostForm=(props)=>{\r\n    const formik = useFormik(\r\n        {\r\n            initialValues: {\r\n                newPostBody: ''\r\n                \r\n            },\r\n            onSubmit: values => {\r\n                props.props.addPost(values.newPostBody)\r\n            }\r\n        }\r\n    );\r\n\r\n    return(\r\n        <form className={s.form} onSubmit={formik.handleSubmit}>\r\n            <textarea  name='newPostBody' value={formik.values.newPostBody} onChange={formik.handleChange}\r\n                      className={s.textarea} placeholder=\"What's new?\"/>\r\n            <button className={s.button} type={'submit'}>Send</button>\r\n        </form>\r\n    )\r\n}\r\nexport default MyPost;","import {addPostCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nlet dispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (text) => {\r\n            dispatch(addPostCreator(text));\r\n        },\r\n    }\r\n}\r\nconst MyPostContainer = connect(mapStateToProps, dispatchToProps)(MyPost);\r\nexport default MyPostContainer;","export default __webpack_public_path__ + \"static/media/oval.085f3aca.svg\";","import fetch from './oval.svg';\r\n\r\nlet Fetch = () => {\r\n\r\n    return (\r\n        <img style={{width: '100px', height: '100px', display: 'block', margin:'100px auto'}} src={fetch} alt=\"\"/>\r\n    )\r\n}\r\nexport default Fetch;","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, setStatus, updateStatus} from \"../../../redux/profile-reducer\";\r\nimport {GrStatusInfo} from \"react-icons/gr\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.profilePage.status)\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(() => {\r\n        setStatus(props.profilePage.status)\r\n    }, [props.profilePage.status])\r\n    return (\r\n        <form>{\r\n\r\n            editMode\r\n                ? <div>\r\n                    <input onBlur={deactivateEditMode} onChange={onStatusChange}\r\n                           autoFocus={true}\r\n                           type=\"text\"/>\r\n                </div>\r\n                : <div onClick={activateEditMode}>\r\n                    <GrStatusInfo/> {status}\r\n                </div>\r\n        } </form>\r\n    )\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {getStatus, setStatus, updateStatus})(ProfileStatusWithHooks);","import s from './ProfileInfo.module.css';\r\nimport MyPostContainer from \"../MyPosts/MyPostContainer\";\r\nimport Fetch from \"../../Common/Fetch/Fetch\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nconst ProfileInfo = (props) => {\r\n    \r\n    let p = props.profilePage.profile;\r\n    if(!p) {\r\n\r\n       return (\r\n           <Fetch/>\r\n       )\r\n    }\r\n    else\r\n            return (\r\n\r\n            <div className={s.main}>\r\n\r\n                <div className={s.content_img}\r\n                     style={{\r\n                         backgroundImage:\r\n                             'url(\"https://cdn.pixabay.com/photo/2012/08/27/14/19/mountains-55067_1280.png\")',\r\n                         backgroundSize: 'cover',\r\n                         backgroundPosition: 'center',\r\n                         gridRow: '1/2',\r\n                         gridColumn: '1/4'\r\n                     }}>\r\n                </div>\r\n\r\n\r\n                <div className={s.header}>\r\n                    <img src={p.photos.small===null? 'http://placehold.it/100x100':p.photos.small} alt=\"\"\r\n                         className={'profile_image'}/>\r\n                    <div className={s.title}>\r\n                        <div className={s.name}>{p.fullName}</div>\r\n                        <div className={s.followers}>100 followers</div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.content}>\r\n\r\n\r\n                    <div className={s.info}>\r\n                        <div className={s.about}>\r\n                            <ProfileStatusWithHooks/>\r\n                        </div>\r\n                        <MyPostContainer/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    ;\r\n\r\n    export default ProfileInfo;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profilePage={props.profilePage}/>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Profile;","import {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nlet mapStateToPropsForRedirect = (state) =>({\r\n        isAuth: state.authReducer.isAuth\r\n\r\n})\r\nexport const withAutoRedirect =(Component)=>{\r\n\r\n     class RedirectComponent extends React.Component{\r\n        render() {\r\n\r\n            if (!this.props.isAuth) return  <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectedComponent= connect (mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectedComponent;\r\n}\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getProfile, getStatus} from \"../../redux/profile-reducer\";\r\nimport {withAutoRedirect} from \"../hoc/withAutoRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profilePage={this.props.profilePage} status={this.props.status}/>\r\n        )\r\n\r\n    }\r\n\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profilePage: state.profilePage,\r\n    status: state.profilePage.status,\r\n    userId: state.authReducer.id,\r\n})\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, getAuthUserData}),\r\n    withRouter,\r\n    withAutoRedirect\r\n)(ProfileContainer)\r\n\r\n","\r\nimport s from './DialogsItem.module.css';\r\n\r\n\r\n   const dialogsElements = (props)=> {\r\n      return <div className={s.item}>\r\n         <img className={s.photo} src=\"https://placehold.it/80x80\" alt=\"\"/>\r\n         <div className={s.name}>{props.name}</div>\r\n      </div>\r\n   }\r\n\r\n\r\nexport default  dialogsElements;","\r\n\r\n\r\n\r\nconst MessageItem = (props) =>{\r\n    return <div className={props.dialogs_item}>{props.name}</div>\r\n}\r\nexport default  MessageItem;","import s from './Dialogs.module.css';\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport React from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {useFormik} from \"formik\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.state.dialogs.map(d => <DialogsItem id={d.id} key={d.id} name={d.name}/>)\r\n    let messagesElements = props.state.messages.map(m => <MessageItem id={m.id} key={m.id} name={m.text}/>)\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.content}>\r\n                <div className={s.dialogs}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMesageForm props={props}/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\nexport const AddMesageForm = (props) => {\r\n    const  formik = useFormik({\r\n        initialValues:{\r\n            newMessageBody: ''\r\n        },\r\n        onSubmit: values => {\r\n            props.props.messageSend(values.newMessageBody);\r\n        }\r\n    })\r\n    return (\r\n        <form className={s.send_message} onSubmit={formik.handleSubmit}>\r\n            <textarea name='newMessageBody' className={s.textarea} onChange={formik.handleChange}\r\n                      value={formik.values.newMessageBody}/>\r\n            <button type={\"submit\"} className={s.button}>Send</button>\r\n        </form>\r\n    )\r\n}\r\nexport default Dialogs;","import {messageSendCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n    import {withAutoRedirect} from './../hoc/withAutoRedirect'\r\nimport {compose} from \"redux\";\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.dialogsPage,\r\n        newMessageBody: state.dialogsPage.newMessageBody,\r\n    }\r\n}\r\nlet dispatchToProps = (dispatch) => {\r\n    return {\r\n        messageSend: (text) => {\r\n            dispatch(messageSendCreator(text));\r\n        }\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, dispatchToProps),\r\n    withAutoRedirect\r\n)(Dialogs);","import s from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nlet User = ({user, followingInProcess,follow,unfollow}) =>{\r\n    return (\r\n\r\n        <div className={s.item} key={user.id}>\r\n            <div className={s.item_right}>\r\n                <img className={'profile_image_middle'}\r\n                     src={user.photos.small === null ? 'http://placehold.it/80x80' : user.photos.small} alt=\"\"/>\r\n                <NavLink to={'profile/' + user.id} className={s.name}>{user.name}</NavLink>\r\n            </div>\r\n            {user.followed\r\n                ? <button disabled={followingInProcess.some(id=> id===user.id)} className={s.followed} onClick={() => {\r\n                    unfollow(user.id);\r\n\r\n                }}>Unfollow</button>\r\n                : <button disabled={followingInProcess.some(id=> id===user.id)} className={s.followed} onClick={() => {\r\n                    follow(user.id);\r\n                }}>Follow</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport  default  User;","import s from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {AiOutlineArrowRight, FaArrowLeft, FaArrowRight} from \"react-icons/all\";\r\n\r\n\r\nconst Paginator = ({currentPage, onPageChanged, totalCount}) =>{\r\n    let pageSize = 10;\r\n    let portionSize = 5;\r\n\r\n\r\n    let pagesCount = Math.ceil(totalCount/pageSize);\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber-1)*portionSize+1;\r\n    let rightPortionPageNumber = portionNumber*portionSize;\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    ;\r\n\r\n    return(\r\n        <div className={s.pages}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}><FaArrowLeft/></button>\r\n            }\r\n            {\r\n\r\n                pages\r\n                .filter(p=> p>=leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <div onClick={() => onPageChanged(p)}\r\n                                className={currentPage === p && s.selectedPage || s.page}>{p}</div>\r\n                }\r\n            )}\r\n            {portionNumber < portionCount &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}><FaArrowRight/></button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Paginator;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport User from \"./User\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nlet Users = (props) => {\r\n    return <div className={s.main}>{\r\n        <div className={s.content}>\r\n            <h2>Users:</h2>\r\n            <div className={s.users}>\r\n            {\r\n                props.users.map(u =>\r\n                    <User user={u}\r\n                          followingInProcess={props.followingInProcess}\r\n                          follow={  props.follow}\r\n                          unfollow={  props.unfollow}\r\n\r\n                    />\r\n                )\r\n            }</div>\r\n        <Paginator currentPage={props.currentPage}\r\n                   onPageChanged={props.onPageChanged}\r\n                   totalCount={props.totalCount}\r\n        />\r\n        </div>\r\n\r\n    }\r\n    </div>\r\n\r\n}\r\n\r\nexport default Users;","export const getTotalCount =(state)=> {\r\n    return state.usersPage.totalCount\r\n}\r\nexport const getCurrentPage=(state)=>{\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getUsers=(state)=>{\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state)=>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getIsFetching = (state)=>{\r\n    return state.usersPage.isFetching\r\n}\r\nexport const followingInProcess = (state)=>{\r\n    return state.usersPage.followingInProcess\r\n}","import Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFetching, toggleIsFollowingProcess, requestUsers,\r\n\r\n}\r\n    from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Fetch from \"../Common/Fetch/Fetch\";\r\nimport {withAutoRedirect} from \"../hoc/withAutoRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    followingInProcess,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalCount,\r\n    getUsers\r\n} from \"../../redux/users-selector\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (p) => {\r\n        this.props.getUsers(p, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> {\r\n                this.props.isFetching ? <Fetch/> : (\r\n                    <Users\r\n                        users={this.props.users}\r\n                        totalCount={this.props.totalCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        unfollow={this.props.unfollow}\r\n                        follow={this.props.follow}\r\n                        isFetching={this.props.isFetching}\r\n                        toggleIsFollowingProcess={this.props.toggleIsFollowingProcess}\r\n                        followingInProcess={this.props.followingInProcess}\r\n\r\n                    />\r\n                )\r\n            }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalCount: getTotalCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        followingInProcess: followingInProcess(state),\r\n        isFetching: getIsFetching(state)\r\n    }\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        toggleIsFetching,\r\n        toggleIsFollowingProcess,\r\n        getUsers: requestUsers,\r\n        getUsersS: getUsers\r\n    }),\r\n    withAutoRedirect\r\n)(UsersContainer)","import s from './Header.module.css';\r\nimport { RiQrCodeFill} from 'react-icons/ri';\r\nimport { BiUserCircle,  ImExit} from \"react-icons/all\";\r\n\r\nconst Header = (props) => {\r\n        let u = props.data.data;\r\n        return (\r\n            <header className={s.header}>\r\n\r\n                <div className={s.logo}>\r\n                    <div className={s.icon}>\r\n                        <RiQrCodeFill/></div>\r\n                    Enigma <div className={s.region}>RU</div>\r\n                </div>\r\n                {\r\n\r\n                    u.isAuth\r\n                        ? <div className={s.main}>\r\n                            <div className={s.login}>\r\n                                <button className={s.logOut} onClick={props.data.logout}>{u.login}<ImExit/></button>\r\n                            </div>\r\n                        </div>\r\n                        : <div className={s.main}>\r\n                            <div className={s.login}>\r\n                                <button className={s.logOut} onClick={props.data.logout}>LogIn<BiUserCircle/></button>\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </header>\r\n        )\r\n\r\n    }\r\n;\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport {getAuthUserData, logout, setUserData} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header data={this.props}/>\r\n        )\r\n    }\r\n\r\n}\r\n;\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        data: {\r\n            userId: state.authReducer.id,\r\n            login: state.authReducer.login,\r\n            email: state.authReducer.email,\r\n            isAuth: state.authReducer.isAuth,\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {setUserData, getAuthUserData, logout})(HeaderContainer);","import React from 'react';\r\nimport {useFormik} from 'formik';\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './Login.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const formik = useFormik({\r\n            initialValues: {\r\n                email: '',\r\n                password: '',\r\n                rememberMe: false\r\n            },\r\n            onSubmit: values => (\r\n                props.props.login(values.email, values.password, values.rememberMe)\r\n            ),\r\n        }\r\n    )\r\n    if (props.props.authReducer.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n\r\n            <form className={s.form} onSubmit={formik.handleSubmit}>\r\n                <h2>Login</h2>\r\n\r\n                <input name=\"email\" type='email' placeholder='Email'\r\n                       className={s.field} onChange={formik.handleChange} value={formik.values.email}/>\r\n                {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                <input name=\"password\" type='password' placeholder='Password'\r\n                       className={s.field} onChange={formik.handleChange} value={formik.values.password}/>\r\n                <div>\r\n                    <input name=\"rememberMe\" type='checkbox'\r\n                           onChange={formik.handleChange} value={formik.values.rememberMe}/>\r\n                    remember me\r\n                </div>\r\n                <button type={\"submit\"}>LogIn</button>\r\n\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Login extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <LoginForm props={this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        authReducer: state.authReducer,\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {login, logout})(Login)","import './App.css';\nimport Nav from './components/Nav/Nav';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport React from \"react\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {connect} from \"react-redux\";\nimport Fetch from \"./components/Common/Fetch/Fetch\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if(!this.props.initialized) {\n            return (<Fetch/>)\n\n        }\n        else\n        return (\n\n            <BrowserRouter>\n\n                <div className=\"app-wrapper\">\n                    <HeaderContainer/>\n                    <Nav/>\n                    <div className=\"app-wrapper-content\">\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                    </div>\n                </div>\n            </BrowserRouter>\n\n        );\n    }\n}\nlet mapStateToProps=(state)=>({\n    initialized: state.app.initialized\n})\nexport default connect(mapStateToProps, {initializeApp})(App);\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}